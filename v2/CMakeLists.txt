CMAKE_MINIMUM_REQUIRED( VERSION 3.8 )
PROJECT(QmlBased CXX)

################################################################################
# Compiler and linker options  
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11") 
SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/../cmake;")
INCLUDE(Functions)

################################################################################
# output directories
SET(ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR}/build)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${BUILD_DIR})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${BUILD_DIR})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BUILD_DIR})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${BUILD_DIR})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${BUILD_DIR})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BUILD_DIR})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${BUILD_DIR})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${BUILD_DIR})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BUILD_DIR})

################################################################################
# Sources and headers   
FIND_PACKAGE(Qt5 COMPONENTS Core Widgets Gui Quick Qml QuickWidgets REQUIRED)  
ADD_DEFINITIONS(${QT_DEFINITIONS})

IF(APPLE)
    SET(CMAKE_SKIP_BUILD_RPATH false)
    SET(CMAKE_BUILD_WITH_INSTALL_RPATH false)
    SET(CMAKE_INSTALL_RPATH "@executable_path/../Frameworks")
    SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH true)
ENDIF()

FILE(GLOB V2_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*.h")
FILE(GLOB V2_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp") 

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/)

################################################################################
# Compile target 
IF(APPLE)
    SET(MACOSX_BUNDLE_BUNDLE_VERSION 1)
    SET(MACOSX_BUNDLE_LONG_VERSION_STRING ${TEMPLATE_VERSION_MAJOR}.${TEMPLATE_VERSION_MINOR}.${TEMPLATE_VERSION_PATCH})
    SET(MACOSX_BUNDLE_SHORT_VERSION_STRING ${TEMPLATE_VERSION_MAJOR}.${TEMPLATE_VERSION_MINOR}.${TEMPLATE_VERSION_PATCH})
    SET(MACOSX_BUNDLE_ICON_FILE Icon.icns)
    SET(MACOSX_BUNDLE_BUNDLE_NAME ${PROJECT_NAME})
    SET(MACOSX_BUNDLE_RESOURCES ${BUILD_DIR}/${PROJECT_NAME}.app/Contents/Resources)
    SET(MACOSX_BUNDLE_ICON ${ROOT_DIR}/res/icons/develop/${MACOSX_BUNDLE_ICON_FILE})

    ADD_EXECUTABLE(${PROJECT_NAME} MACOSX_BUNDLE ${list_app_src} ${MACOSX_BUNDLE_ICON})
	SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ${BINARY_DIR}/info.plist)
ELSE()
    ADD_EXECUTABLE(${PROJECT_NAME} ${V2_HEADER_FILES} ${V2_SOURCE_FILES} ${CMAKE_CURRENT_SOURCE_DIR}/resource/timeline.qrc)
ENDIF()
 
# https://www.kdab.com/using-cmake-with-qt-5/ 
qt5_use_modules(${PROJECT_NAME} Core Widgets Gui Quick Qml QuickWidgets) 

include(FeatureSummary)
feature_summary(WHAT ALL FATAL_ON_MISSING_REQUIRED_PACKAGES)
################################################################################
# copy resources 
IF(APPLE)
    EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E make_directory ${MACOSX_BUNDLE_RESOURCES})
    EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${MACOSX_BUNDLE_ICON} ${MACOSX_BUNDLE_RESOURCES})
    ADD_CUSTOM_COMMAND(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory "${ROOT_DIR}/resource/qml" ${BUILD_DIR}/${PROJECT_NAME}.app/Contents/Resources)
ELSE()
    ADD_CUSTOM_COMMAND(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory "${ROOT_DIR}/resource/qml" ${BUILD_DIR}/qml)
    ADD_CUSTOM_TARGET(CopyResources ALL COMMAND ${CMAKE_COMMAND} -E copy_directory "${ROOT_DIR}/resource/qml" ${BUILD_DIR}/qml)
ENDIF()
